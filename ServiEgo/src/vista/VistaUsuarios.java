/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.UsuarioJpaController;
import controlador.VentaJpaController;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Usuario;
import modelo.Venta;
import templates.vistaTemplate;

/**
 *
 * @author Familia
 */
public class VistaUsuarios extends javax.swing.JDialog {

    public UsuarioJpaController usuarioControlador = new UsuarioJpaController();
    public VentaJpaController ventaControlador = new VentaJpaController();
    public Usuario usuarioSeleccionado;
    public List<Usuario> listaUsuario = new ArrayList<>();
    public Usuario logueado;
    Icon iconoMostrar;
    public vistaTemplate vistaImg = new vistaTemplate();
    
    public VistaUsuarios(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        llenarTablaUsuario();
        actualizarComboBox();
        this.setTitle("VENTANA USUARIOS");
        this.setLocationRelativeTo(VistaUsuarios.this);//para que aparezca centrado
        this.setResizable(false);//para que no se modifique el tama√±o del frame
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tipoUser = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUser = new javax.swing.JTable();
        btnCrear = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 16)); // NOI18N
        jLabel1.setText("Cedula:");

        jLabel11.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 24)); // NOI18N
        jLabel11.setText("Usuarios");

        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 16)); // NOI18N
        jLabel12.setText("Nombre:");

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 16)); // NOI18N
        jLabel13.setText("Tipo usuario:");

        tipoUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoUserActionPerformed(evt);
            }
        });

        tableUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableUserMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableUser);

        btnCrear.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 14)); // NOI18N
        btnCrear.setText("CREAR");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 14)); // NOI18N
        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.setEnabled(false);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 14)); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 14)); // NOI18N
        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCrear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpiar))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                            .addComponent(tipoUser, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jLabel11))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel12))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                .addComponent(txtCedula)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(tipoUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnActualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableUserMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableUserMousePressed
        // TODO add your handling code here:

        int fila = tableUser.getSelectedRow();
        int codigo = Integer.parseInt(tableUser.getValueAt(fila, 0).toString());
        usuarioSeleccionado = usuarioControlador.findUsuario(codigo);

        txtCedula.setText(usuarioSeleccionado.getDocumentoUsuario()+"");
        txtNombre.setText( usuarioSeleccionado.getNombreUsuario()+"");

        tipoUser.setSelectedItem(usuarioSeleccionado.getTipoUsuario());

        btnCrear.setEnabled(false);
        btnActualizar.setEnabled(true);
        btnEliminar.setEnabled(true);
        
    }//GEN-LAST:event_tableUserMousePressed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        
        try {
            /**********************************************************************************/
            String cedula = txtCedula.getText(), claveEncrypt, nombre = txtNombre.getText();            
            if("".equals(cedula)){
                throw new Exception("Ingrese la c√©dula, este campo es obligatorio");
            }
            Usuario userFind = usuarioControlador.consultarxDocumento(Integer.parseInt(cedula));
            if(userFind != null){
                iconoMostrar = vistaImg.iconoExcepcion("error");
                throw new Exception("Ya hay un usuario con esa c√©dula");
            }
            if("".equals(nombre)){
                throw new Exception("Ingrese el nombre, este campo es obligatorio");
            }            
            //Si no se ha seleccionado alg√∫n tipo de usuario, lanza un error
            int c = tipoUser.getSelectedIndex();
            if(c == 0){
                throw new Exception("Seleccione el tipo de usuario");
            }
            /**********************************************************************************/
            claveEncrypt = vistaImg.encriptarContrase√±a(cedula);
            /**********************************************************************************/
            Usuario newUser = new Usuario();
            newUser.setDocumentoUsuario(Long.parseLong(cedula));
            newUser.setNombreUsuario(nombre.toUpperCase());
            newUser.setClaveUsuario(claveEncrypt);
            newUser.setTipoUsuario(tipoUser.getSelectedItem()+"");
            /**********************************************************************************/
            usuarioControlador.create(newUser);
            iconoMostrar = vistaImg.iconoExcepcion("success");
            JOptionPane.showMessageDialog(null, "El usuario ha sido creado con √©xito", "MENSAJE DE INFORMACI√ìN", JOptionPane.INFORMATION_MESSAGE, iconoMostrar);
            limpiar();
            llenarTablaUsuario();
            
        } catch (Exception e) {
            iconoMostrar = vistaImg.iconoExcepcion("error");
            JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", JOptionPane.INFORMATION_MESSAGE, iconoMostrar); 
        }
        
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyTyped
        
        char c = evt.getKeyChar();

        if (c < '0' || c > '9') {
            evt.consume();//esto es para que solo pueda ingresar numeros
        }
        
    }//GEN-LAST:event_txtCedulaKeyTyped

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        
        char a = evt.getKeyChar();

        if ((a < 'a' || a > 'z') && (a < 'A' || a > 'Z') && (a < ' ' || a > ' ')) {
            evt.consume();
        }//esto es para que solo pueda ingresar letras
        
    }//GEN-LAST:event_txtNombreKeyTyped

    private void tipoUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoUserActionPerformed
        
        String usuario = tipoUser.getSelectedItem().toString();
        String nueva = "";
        if (usuario.equals("OTRA")) {            
            nueva = JOptionPane.showInputDialog("Ingrese el nombre").toUpperCase();               
            actualizarComboBox();
            tipoUser.addItem(nueva);
            tipoUser.setSelectedItem(nueva);
        }
        
    }//GEN-LAST:event_tipoUserActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        
        try {
            /**********************************************************************************/
            String cedula = txtCedula.getText(), claveEncrypt, nombre = txtNombre.getText();
            if("".equals(cedula)){
                throw new Exception("Ingrese la c√©dula, este campo es obligatorio");
            }
            Usuario userFind = usuarioControlador.consultarxDocumento(Integer.parseInt(cedula));
            if(userFind == null){
                iconoMostrar = vistaImg.iconoExcepcion("error");
                throw new Exception("No existe un usuario con esa c√©dula");
            }
            if("".equals(nombre)){
                throw new Exception("Ingrese el nombre, este campo es obligatorio");
            }            
            //Si no se ha seleccionado alg√∫n tipo de usuario, lanza un error
            int c = tipoUser.getSelectedIndex();
            if(c == 0){
                throw new Exception("Seleccione el tipo de usuario");
            }
            /**********************************************************************************/
            claveEncrypt = vistaImg.encriptarContrase√±a(cedula);
            /**********************************************************************************/ 
            usuarioSeleccionado.setDocumentoUsuario(Long.parseLong(cedula));
            usuarioSeleccionado.setNombreUsuario(nombre.toUpperCase());
            usuarioSeleccionado.setClaveUsuario(claveEncrypt);
            usuarioSeleccionado.setTipoUsuario(tipoUser.getSelectedItem()+"");
            
            usuarioControlador.edit(usuarioSeleccionado);
            iconoMostrar = vistaImg.iconoExcepcion("success");
            JOptionPane.showMessageDialog(null, "El usuario ha sido actualizado con √©xito", "MENSAJE DE INFORMACI√ìN", JOptionPane.INFORMATION_MESSAGE, iconoMostrar);
            limpiar();
            llenarTablaUsuario();
            /**********************************************************************************/        
        } catch (Exception e) {
            iconoMostrar = vistaImg.iconoExcepcion("error");
            JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", JOptionPane.INFORMATION_MESSAGE, iconoMostrar); 
        }
        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        
        iconoMostrar = vistaImg.iconoExcepcion("pregunta");
        int quiere = JOptionPane.showConfirmDialog(null, "¬øEst√° seguro?", "ELIGE UNA OPCI√ìN", 0, HEIGHT, iconoMostrar);
        switch (quiere) {
            case 0:
                try {
                    
                    /****************************************************************************************/
                    List<Venta> usuConVentas = ventaControlador.userVentas(usuarioSeleccionado);
                    if(!usuConVentas.isEmpty()){
                        throw new Exception("El usuario ha realizado ventas y por seguridad no es posible eliminarlo");
                    }
                    /****************************************************************************************/
                    usuarioControlador.destroy(usuarioSeleccionado.getCodigoUsuario());
                    iconoMostrar = vistaImg.iconoExcepcion("success");
                    JOptionPane.showMessageDialog(null, "El usuario ha sido eliminado con √©xito", "MENSAJE DE INFORMACI√ìN", JOptionPane.INFORMATION_MESSAGE, iconoMostrar);
                    limpiar();
                    llenarTablaUsuario();
                    
                } catch (Exception e) {
                    iconoMostrar = vistaImg.iconoExcepcion("error");
                    JOptionPane.showMessageDialog(null, e.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE, iconoMostrar);
                } break;
            case 1:
                //no
                llenarTablaUsuario();
                break;
            default:
                break;
        }
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    public void llenarTablaUsuario(){
        listaUsuario = usuarioControlador.findUsuarioEntities();
        DefaultTableModel modelo = new DefaultTableModel();

        modelo.addColumn("Id");
        modelo.addColumn("C√©dula");
        modelo.addColumn("Nombre");
        modelo.addColumn("Clave");
        modelo.addColumn("Tipo de Usuario");

        String[] datos = new String[5];
        for (Usuario p : listaUsuario) {
            datos[0] = p.getCodigoUsuario()+"";
            datos[1] = p.getDocumentoUsuario()+"";
            datos[2] = p.getNombreUsuario();
            datos[3] = p.getClaveUsuario();
            datos[4] = p.getTipoUsuario()+"";
            modelo.addRow(datos);
        }        
        tableUser.setModel(modelo);
    }
    
    public void limpiar(){
        
        txtCedula.setText("");
        txtNombre.setText("");
        tipoUser.setSelectedIndex(0);
        
        btnCrear.setEnabled(true);
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
        
    }
    
    public void actualizarComboBox(){
        //llenar el combo box de las categorias registradas
        tipoUser.removeAllItems();
        List<String> datos = usuarioControlador.distincxtipousuario();
        tipoUser.addItem("Seleccione una opci√≥n");
        for (String c : datos){
            tipoUser.addItem(c);
        }
        tipoUser.addItem("OTRA");     
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VistaUsuarios dialog = new VistaUsuarios(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableUser;
    private javax.swing.JComboBox<String> tipoUser;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
