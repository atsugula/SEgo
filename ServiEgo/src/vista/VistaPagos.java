/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.PagoJpaController;
import controlador.VentaJpaController;
import controlador.exceptions.IllegalOrphanException;
import controlador.exceptions.NonexistentEntityException;
import static java.awt.image.ImageObserver.HEIGHT;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Pago;
import modelo.Venta;
import templates.vistaTemplate;

/**
 *
 * @author Familia
 */
public class VistaPagos extends javax.swing.JDialog {

    List<Venta> listaVentas = new ArrayList<>();
    List<Pago> listaPagos = new ArrayList<>();
    Venta ventaSeleccionada;
    Pago pagoSeleccionado;
    public VentaJpaController ventaControlador = new VentaJpaController();
    public PagoJpaController pagoControlador = new PagoJpaController();
    Icon iconoMostrar;
    public vistaTemplate vistaImg = new vistaTemplate();   
    
    public VistaPagos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        listaVentas = ventaControlador.consultarVentasPago();
        llenarTablaVenta();
        fecha_gasto.setDate(new Date());
        this.setTitle("VENTANA PAGOS");
        this.setLocationRelativeTo(VistaPagos.this);//para que aparezca centrado
        this.setResizable(false);//para que no se modifique el tamaño del frame
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaVentas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonBuscarCedula = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaGastos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fecha_gasto = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        txtFactura = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        btnCrear = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        tablaVentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaVentasMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaVentas);

        jPanel2.setBackground(new java.awt.Color(255, 0, 51));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bolsa-de-dinero.png"))); // NOI18N
        jLabel1.setText("GESTIÓN DE PAGOS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonBuscarCedula.setText("Buscar");
        jButtonBuscarCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarCedulaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 16)); // NOI18N
        jLabel2.setText("Cedula:");

        tablaGastos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "#", "Fecha", "Valor", "Observaciones"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaGastos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaGastosMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tablaGastos);

        jLabel3.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 16)); // NOI18N
        jLabel3.setText("Factura:");

        jLabel4.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 16)); // NOI18N
        jLabel4.setText("Fecha:");

        fecha_gasto.setDateFormatString("yyyy-MM-dd");

        jLabel5.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 16)); // NOI18N
        jLabel5.setText("Valor:");

        jLabel6.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 16)); // NOI18N
        jLabel6.setText("Observaciones:");

        txtObservaciones.setColumns(20);
        txtObservaciones.setRows(5);
        txtObservaciones.setText("Sin observaciones.");
        jScrollPane3.setViewportView(txtObservaciones);

        btnCrear.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 14)); // NOI18N
        btnCrear.setText("CREAR");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 14)); // NOI18N
        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.setEnabled(false);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 14)); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 14)); // NOI18N
        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 899, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBuscarCedula)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCrear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnActualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLimpiar))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane3)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(fecha_gasto, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBuscarCedula)
                    .addComponent(jLabel2)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fecha_gasto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnActualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaVentasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaVentasMousePressed

        int fila = tablaVentas.getSelectedRow();
        int codVenta = Integer.parseInt(tablaVentas.getValueAt(fila, 0).toString());
        ventaSeleccionada = ventaControlador.findVenta(codVenta);
        if(ventaSeleccionada == null){
            JOptionPane.showMessageDialog(this, "El gasto no existe, por favor cierre la ventana y vuelva a abrirla.");
        }else{  
            txtFactura.setText(codVenta + "");
            listaPagos = pagoControlador.consultarPagosFactura(codVenta);
            llenarTablaPago();
        }
        

    }//GEN-LAST:event_tablaVentasMousePressed

    private void jButtonBuscarCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarCedulaActionPerformed
        // TODO add your handling code here:
        try {
            int cedula = Integer.parseInt(txtCedula.getText());
            listaVentas = ventaControlador.consultarVentasPagoCliente(cedula);
            llenarTablaVenta();
        } catch (Exception e) {
            listaVentas = ventaControlador.consultarVentasPago();
            llenarTablaVenta();
        }
    }//GEN-LAST:event_jButtonBuscarCedulaActionPerformed

    private void tablaGastosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaGastosMousePressed
        
        int fila = tablaGastos.getSelectedRow();
        int codPago = Integer.parseInt(tablaGastos.getValueAt(fila, 0).toString());
        pagoSeleccionado = pagoControlador.findPago(codPago);
        if(pagoSeleccionado == null){
            JOptionPane.showMessageDialog(this, "El pago no existe, por favor cierre la ventana y vuelva a abrirla.");
        }else{
            txtFactura.setText(pagoSeleccionado.getIdVenta().getIdVenta()+"");
            txtValor.setText(pagoSeleccionado.getValorPago()+"");
            txtObservaciones.setText(pagoSeleccionado.getObservacionesPago()+"");
            fecha_gasto.setDate(pagoSeleccionado.getFechaVenta());

            btnCrear.setEnabled(false);
            btnActualizar.setEnabled(true);
            btnEliminar.setEnabled(true);
        }        
        
    }//GEN-LAST:event_tablaGastosMousePressed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
       
        try {
            // REGISTRAR LOS PAGOS
            Pago nuevoPago = new Pago();
            nuevoPago.setFechaVenta(fecha_gasto.getDate());
            nuevoPago.setValorPago(Integer.parseInt(txtValor.getText()));
            //En caso de que las observaciones esten vacias
            String observa = txtObservaciones.getText();
            if("".equals(observa)){
                observa = "Sin observaciones.";
            }
            nuevoPago.setObservacionesPago(observa);
            if (nuevoPago.getValorPago() <= ventaSeleccionada.getSaldoVenta()) {                
                
                ventaSeleccionada.setSaldoVenta(ventaSeleccionada.getSaldoVenta() - nuevoPago.getValorPago());
                ventaControlador.edit(ventaSeleccionada);
                
                nuevoPago.setIdVenta(ventaSeleccionada);
                pagoControlador.create(nuevoPago);
                
                iconoMostrar = vistaImg.iconoExcepcion("success");
                JOptionPane.showMessageDialog(null, "El pago ha sido creado con éxito", "MENSAJE DE INFORMACIÓN", JOptionPane.INFORMATION_MESSAGE, iconoMostrar);
                listaVentas = ventaControlador.consultarVentasPago();
                listaPagos = pagoControlador.consultarPagosFactura(ventaSeleccionada.getIdVenta());
                
                ventaSeleccionada = ventaControlador.findVenta(ventaSeleccionada.getIdVenta());
                limpiar();
                listaVentas = ventaControlador.consultarVentasPago();
                listaPagos = pagoControlador.consultarPagosFactura(ventaSeleccionada.getIdVenta());
                llenarTablaPago();
                llenarTablaVenta();
            } else {
                JOptionPane.showMessageDialog(this, "¿Quiere dar propina?");
            }
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(VistaPagos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception e) {
            Logger.getLogger(VistaPagos.class.getName()).log(Level.SEVERE, null, e);
        }
        
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        
        try {
            // MODIFICAR EL PAGO
            Pago pagoModificado = pagoSeleccionado;
            int pagoViejo = pagoSeleccionado.getValorPago();
            int pagoNuevo = Integer.parseInt(txtValor.getText());
            ventaSeleccionada.setSaldoVenta(ventaSeleccionada.getSaldoVenta()+ pagoViejo-pagoNuevo);
            ventaControlador.edit(ventaSeleccionada);
            ventaSeleccionada = ventaControlador.findVenta(ventaSeleccionada.getIdVenta());
            pagoModificado.setFechaVenta(fecha_gasto.getDate());
            //En caso de que las observaciones esten vacias
            String observa = txtObservaciones.getText();
            if("".equals(observa)){
                observa = "Sin observaciones.";
            }
            pagoModificado.setObservacionesPago(observa);
            pagoModificado.setValorPago(pagoNuevo);
            pagoControlador.edit(pagoModificado);
            listaPagos = pagoControlador.consultarPagosFactura(ventaSeleccionada.getIdVenta());
            llenarTablaPago();
            listaVentas = ventaControlador.consultarVentasPago();
            llenarTablaVenta();
            iconoMostrar = vistaImg.iconoExcepcion("success");
            JOptionPane.showMessageDialog(null, "El pago ha sido actualizado con éxito", "MENSAJE DE INFORMACIÓN", JOptionPane.INFORMATION_MESSAGE, iconoMostrar);
            limpiar();
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(VistaPagos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(VistaPagos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        
        iconoMostrar = vistaImg.iconoExcepcion("pregunta");
        int quiere = JOptionPane.showConfirmDialog(null, "¿Está seguro?", "ELIGE UNA OPCIÓN", 0, HEIGHT, iconoMostrar);
        switch (quiere) {
            case 0:
                try {
                    
                    ventaSeleccionada.setSaldoVenta(ventaSeleccionada.getSaldoVenta()+pagoSeleccionado.getValorPago());
                    ventaControlador.edit(ventaSeleccionada);
                    ventaSeleccionada = ventaControlador.findVenta(ventaSeleccionada.getIdVenta());
                    pagoControlador.destroy(pagoSeleccionado.getCodigoPago());
                    iconoMostrar = vistaImg.iconoExcepcion("success");
                    JOptionPane.showMessageDialog(null, "El pago ha sido eliminado con éxito", "MENSAJE DE INFORMACIÓN", JOptionPane.INFORMATION_MESSAGE, iconoMostrar);
                    listaPagos = pagoControlador.consultarPagosFactura(ventaSeleccionada.getIdVenta());
                    llenarTablaPago();
                    listaVentas = ventaControlador.consultarVentasPago();
                    llenarTablaVenta();
                    limpiar();
                    
                } catch (IllegalOrphanException | NonexistentEntityException ex) {
                    Logger.getLogger(VistaUsuarios.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(VistaPagos.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case 1:
                //no
                break;
            default:
                break;
        }
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void limpiar(){
        txtFactura.setText("");
        txtValor.setText("");
        txtObservaciones.setText("");
        fecha_gasto.setDate(new Date());
        
        btnCrear.setEnabled(true);
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }
    
    public void llenarTablaPago() {

        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("#");
        modelo.addColumn("Fecha");
        modelo.addColumn("Valor");
        modelo.addColumn("Observaciones");
        String datos[] = new String[4];
        for (Pago p : listaPagos) {
            datos[0] = p.getCodigoPago() + "";
            datos[1] = formato.format(p.getFechaVenta());
            datos[2] = p.getValorPago() + "";
            datos[3] = p.getObservacionesPago();
            modelo.addRow(datos);
        }
        tablaGastos.setModel(modelo);
    }
    
    public void llenarTablaVenta() {
        DefaultTableModel modelo = new DefaultTableModel() {
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        listaVentas = ventaControlador.findVentaEntities();
        modelo.addColumn("#");
        modelo.addColumn("Fecha");
        modelo.addColumn("Total");
        modelo.addColumn("Saldo");
        modelo.addColumn("Descuento");
        modelo.addColumn("Iva");
        modelo.addColumn("Cliente");
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        String datos[] = new String[7];
        for (Venta v : listaVentas) {
            datos[0] = v.getIdVenta() + "";
            datos[1] = formato.format(v.getFechaVenta());
            datos[2] = v.getTotalVenta() + "";
            datos[3] = v.getSaldoVenta() + "";
            datos[4] = v.getDescuentoVenta() + "";
            datos[5] = v.getIvaVenta() + "";
            datos[6] = v.getIdCliente().getNombreCliente();
            modelo.addRow(datos);
        }
        tablaVentas.setModel(modelo);

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaPagos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaPagos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaPagos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaPagos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VistaPagos dialog = new VistaPagos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private com.toedter.calendar.JDateChooser fecha_gasto;
    private javax.swing.JButton jButtonBuscarCedula;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tablaGastos;
    private javax.swing.JTable tablaVentas;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtFactura;
    private javax.swing.JTextArea txtObservaciones;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
